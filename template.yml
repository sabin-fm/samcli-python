AWSTemplateFormatVersion: "2010-09-09"
Resources:
  MyLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName : my-first-lambda-funtion
      Handler: lambda_function.lambda_handler
      Role: !GetAtt MyLambdaRole.Arn
      Runtime: python3.9
         
  LambdaExecutionRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: "my-lambda-execution-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "lambda.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: "/"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
  RestApi:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: my-first-rest-api
      Description: My REST API Gateway
      EndpointConfiguration:
        Types:
          - REGIONAL
  ApiGatewayResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref RestApi
      ParentId: !GetAtt RestApi.RootResourceId
      PathPart: my-resource
  ApiGatewayMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref RestApi
      ResourceId: !Ref ApiGatewayResource
      HttpMethod: GET
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub "arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:548616401217:function:my-fisrt-lambda-funtion/invocations"
  ApiGatewayDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    Properties:
      RestApiId: !Ref RestApi
      StageName: prod
Outputs:
  RestApiUrl:
    Value: !Sub "https://my-first-rest-api.execute-api.us-east-1.amazonaws.com/prod/my-resource"
